
# Bank 1 Database Schema Analysis

Please analyze the following database schema and identify relationships between tables.

## Database: Bank 1

### Tables and Columns:

**Table: Bank1_Mock_CurSav_Accounts**
File: Bank1_Mock_CurSav_Accounts.xlsx
Columns (16): accountId, displayName, customerId, customerRole, productId, status, currency, branch, accountOpeningDate, arrangementStartDate, availableBalance, onlineActualBalance, lockedAmount, availableLimit, productDescription, category

**Table: Bank1_Mock_CurSav_Transactions**
File: Bank1_Mock_CurSav_Transactions.csv
Columns (23): transactionReference, activity, transactionAmount, currency, effectiveDate, transactionDate, bookingDate, narrative, externalEventStatus, userRole, branch, accountId, chargesPaymentTypeName, chargesPropertyName, chargesChargeAmount, taxRate, availableBalance, lockedAmount, approvedOverdraftLimit, accrualAmount, effectiveRate, availableOverdraftLimit, channel

**Table: Bank1_Mock_Customer**
File: Bank1_Mock_Customer.xlsx
Columns (24): phoneNumber, smsNumber, email, street, addressCity, country, legalId, legalDocumentName, legalIssueAuthorised, legalIssueCountry, legalIssueDate, legalExpiredDate, language, dateOfBirth, customerStatus, accountOfficerId, gender, state, postCode, contactDate, lastName, givenName, customerType, customerId

**Table: Bank1_Mock_FixedTerm_Accounts**
File: Bank1_Mock_FixedTerm_Accounts.xlsx
Columns (20): accountId, accountTitles, productId, currency, customerId, customerRole, branch, reason, maturityDate, arrangementEffectiveDate, expiryDate, agentCustomerId, expectedBalance, currentBalance, accruedInterest, jointCustomerName, category, interestRate, interestStatement, status

**Table: Bank1_Mock_FixedTerm_Transactions**
File: Bank1_Mock_FixedTerm_Transactions.csv
Columns (17): transactionReference, activity, transactionAmount, currency, effectiveDate, transactionDate, reason, externalEventStatus, userRole, branch, chargesChargeAmount, interestAmount, taxRate, currentBalance, interestRate, channel, accountId

**Table: Bank1_Mock_Loan_Accounts**
File: Bank1_Mock_Loan_Accounts.xlsx
Columns (31): accountId, accountName, productId, currency, customerId, customerRole, branch, reason, maturityDate, arrangementEffectiveDate, expiryDate, agentCustomerIds, loanBalance, availableBalance, loanInterestRate, loanInterestType, compoundType, effectiveRate, gracePeriod, periodicPayment, numberPayments, paymentFrequency, fixedDaysOfMonth, amortisationTerm, principalAmount, principalBalance, interestAmount, chargeAmount, interestBalance, interestFromArrearsBalance, accountType

**Table: Bank1_Mock_Loan_Transactions**
File: Bank1_Mock_Loan_Transactions.csv
Columns (16): transactionReference, activity, transactionAmount, currency, effectiveDate, reason, externalEventStatus, userRole, branch, principalAmount, interestAmount, chargeAmount, balanceAmount, interestRate, channelName, accountId

**Table: Bank1_Schema**
File: Bank1_Schema.xlsx
Columns (1): Customer


## Your Task:

1. **Identify Primary Keys**: For each table, identify which column(s) serve as primary keys
2. **Identify Foreign Keys**: Find columns that reference other tables
3. **Map Relationships**: Create a relationship map showing how tables connect
4. **Suggest Improvements**: Recommend any schema improvements

## Expected Output Format:

Please provide your analysis in the following JSON format:

```json
{
  "bank_name": "{bank_name}",
  "tables": [
    {
      "table_name": "table_name",
      "primary_keys": ["column1", "column2"],
      "foreign_keys": [
        {
          "column": "column_name",
          "references_table": "other_table",
          "references_column": "other_column",
          "relationship_type": "one_to_many|many_to_one|one_to_one"
        }
      ],
      "suggested_improvements": [
        "Add index on column X",
        "Consider normalizing table Y"
      ]
    }
  ],
  "relationships": [
    {
      "parent_table": "table1",
      "child_table": "table2", 
      "parent_column": "id",
      "child_column": "table1_id",
      "relationship_type": "one_to_many",
      "confidence": 0.9
    }
  ],
  "summary": {
    "total_tables": 5,
    "total_relationships": 8,
    "schema_quality_score": 8.5
  }
}
```

Please analyze the schema and provide your response in the exact JSON format above.
