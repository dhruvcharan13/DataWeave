
# Bank 2 Database Schema Analysis

Please analyze the following database schema and identify relationships between tables.

## Database: Bank 2

### Tables and Columns:

**Table: Bank2_Mock_Addresses**
File: Bank2_Mock_Addresses.xlsx
Columns (7): city, country, encodedKey, line1, parentKey, postcode, region

**Table: Bank2_Mock_Customer**
File: Bank2_Mock_Customer.xlsx
Columns (16): lastName, migrationEventKey, preferredLanguage, notes, gender, emailAddress, encodedKey, id, state, assignedUserKey, homePhone, creationDate, birthDate, firstName, mobilePhone, clientType

**Table: Bank2_Mock_Deposit_Accounts**
File: Bank2_Mock_Deposit_Accounts.xlsx
Columns (25): encodedKey, id, name, productTypeKey, currencyCode, accountHolderKey, accountHolderType, assignedBranchKey, notes, maturityDate, creationDate, closedDate, assignedUserKey, totalBalance, availableBalance, interestAccrued, ownershipHistory, accountType, interestRate, interestPaymentPoint, status, accountState, lockedBalance, overdraftAmount, productDescription

**Table: Bank2_Mock_Deposit_Transactions**
File: Bank2_Mock_Deposit_Transactions.xlsx
Columns (26): id, encodedKey, type, amount, currencyCode, creationDate, valueDate, notes, externalId, userKey, branchKey, interestRate, transactionChannel, parentAccountKey, feesAmount, interestAmount, taxRate, totalBalance, bookingDate, feesPredefinedFee, feesName, availableBalance, lockedBalance, overdraftAmount, interestBalance, overdraftLimit

**Table: Bank2_Mock_Identifications**
File: Bank2_Mock_Identifications.xlsx
Columns (8): clientKey, documentId, documentType, encodedKey, issuingAuthority, issuingCountry, issuingDate, validUntil

**Table: Bank2_Mock_Loan_Accounts**
File: Bank2_Mock_Loan_Accounts.xlsx
Columns (33): id, loanName, productTypeKey, currencyCode, accountHolderKey, accountHolderType, assignedBranchKey, notes, maturityDate, creationDate, closedDate, assignedUserKey, totalBalance, availableBalance, interestRate, interestType, interestApplicationMethod, effectiveInterestRate, gracePeriod, periodicPayment, repaymentInstallments, repaymentPeriodUnit, fixedDaysOfMonth, repaymentPeriodCount, amortizationPeriod, principalDue, principalBalance, interestDue, feesDue, interestBalance, interestFromArrearsBalance, interestAccrued, accountType

**Table: Bank2_Mock_Loan_Transactions**
File: Bank2_Mock_Loan_Transactions.xlsx
Columns (18): encodedKey, id, type, amount, originalCurrencyCode, valueDate, notes, externalId, userKey, branchKey, principalAmount, interestAmount, feesAmount, totalBalance, principalBalance, interestRate, transactionChannel, parentAccountKey

**Table: Bank2_Schema**
File: Bank2_Schema.xlsx
Columns (1): Customer


## Your Task:

1. **Identify Primary Keys**: For each table, identify which column(s) serve as primary keys
2. **Identify Foreign Keys**: Find columns that reference other tables
3. **Map Relationships**: Create a relationship map showing how tables connect
4. **Suggest Improvements**: Recommend any schema improvements

## Expected Output Format:

Please provide your analysis in the following JSON format:

```json
{
  "bank_name": "{bank_name}",
  "tables": [
    {
      "table_name": "table_name",
      "primary_keys": ["column1", "column2"],
      "foreign_keys": [
        {
          "column": "column_name",
          "references_table": "other_table",
          "references_column": "other_column",
          "relationship_type": "one_to_many|many_to_one|one_to_one"
        }
      ],
      "suggested_improvements": [
        "Add index on column X",
        "Consider normalizing table Y"
      ]
    }
  ],
  "relationships": [
    {
      "parent_table": "table1",
      "child_table": "table2", 
      "parent_column": "id",
      "child_column": "table1_id",
      "relationship_type": "one_to_many",
      "confidence": 0.9
    }
  ],
  "summary": {
    "total_tables": 5,
    "total_relationships": 8,
    "schema_quality_score": 8.5
  }
}
```

Please analyze the schema and provide your response in the exact JSON format above.
